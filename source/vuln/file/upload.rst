文件上传
================================

文件类型检测绕过
--------------------------------

更改请求绕过
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
有的站点仅仅在前端检测了文件类型，这种类型的检测可以直接修改网络请求绕过。
同样的，有的站点在后端仅检查了HTTP Header中的信息，比如Content-Type等，这种检查同样可以通过修改网络请求绕过。

Magic检测绕过
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
有的站点使用文件头来检测文件类型，这种检查可以在Shell前加入对应的字节以绕过检查。几种常见的文件类型的头字节如下表所示

==============      ==============
类型                二进制值
==============      ==============
JPG                 FF D8 FF E0 00 10 4A 46 49 46
GIF                 47 49 46 38 39 61
PNG                 89 50 4E 47
TIF                 49 49 2A 00
BMP                 42 4D
==============      ==============

后缀绕过
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
部分服务仅根据后缀、上传时的信息或Magic Header来判断文件类型，此时可以绕过
另外，php由于历史原因，部分解释器可能支持符合正则 ``/ph(p[2-7]?|t(ml)?)/`` 的后缀，如 ``php`` / ``php5`` / ``pht`` / ``phtml`` 等 可在禁止上传php文件时测试该类型

竞争上传绕过
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
有的服务器采用了先保存，再删除不合法文件的方式，在这种服务器中，可以反复上传一个会生成Web Shell的文件并尝试访问，多次之后即可获得Shell。

攻击技巧
--------------------------------

Apache重写GetShell
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Apache可根据是否允许重定向考虑上传.htacess

内容为

::
    
    AddType application/x-httpd-php .png
    php_flag engine 1

就可以用png或者其他后缀的文件做php脚本了

软链接任意读文件
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
上传的压缩包文件会被解压的文件时，可以考虑上传含符号链接的文件
若服务器没有做好防护，可实现任意文件读取的效果


防护技巧
--------------------------------
- 使用白名单限制上传文件的类型
- 使用更严格的文件类型检查方式
- 限制Web Server对上传文件夹的解析