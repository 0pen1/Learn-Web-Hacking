SQL注入
================================

SQL注入的目的
--------------------------------

1. 有账号体系的
    1. 无密码登录
    2. 获取密码

2. 获取数据库结构
3. 获取数据库，系统版本
4. 读写文件


注入过程
--------------------------------
1. 判断注入点
    '
    and 1=1
    and 1=2
    or 1=1
    or 1=2
    and 1=23

2. 若存在注入点,判断数据库类型
    and exists (select * from msysobjects ) > 0 //access数据库
    and exists (select * from sysobjects ) > 0 //SQLServer数据库
3. 判断数据库表
    and exsits (select * from admin)



审计时看什么
--------------------------------
1. 看全局过滤能否bypass
2. 看是否有直接执行sql的地方
3. 看是用的什么驱动，mysql/mysqli/pdo
    1. 如果使用PDO，看是否是直接执行的地方


常用Bypass
--------------------------------
1. 编码绕过
    - 大小写
    - url编码
    - html编码
    - 十六进制编码
    - unicode编码
2. 注释
    - ++
    - \/\*\*\/
    - 内联注释用的更多，它有一个特性/!**/只有MySQL能识别
3. 只过滤了一次
4. 相同功能替换
    4.1 函数替换
        - substring 用mid sub
        - ascii 用hex bin
        - benchmark用 sleep
    4.2 变量替换
        - user() @@user
    4.3 符号和关键字
        - and &
        - or |
5. HTTP参数
    - HTTP参数污染
    - HTTP分割注入
6. 缓冲区溢出
    - 利用一些C语言的WAF，没有缓冲区保护
7. 利用本身参数

SQL注入小技巧
--------------------------------
双查询注入